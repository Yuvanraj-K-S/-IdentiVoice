{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\voice-auth-system\\\\frontend\\\\src\\\\components\\\\VoiceRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { registerVoice, loginVoice } from '../utils/api';\nimport Recorder from 'recorder-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  mode,\n  userData,\n  handleStatus\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(10);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [passphrase, setPassphrase] = useState('');\n  const recorderRef = useRef(null);\n  const countdownRef = useRef(null);\n  const streamRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (countdownRef.current) clearInterval(countdownRef.current);\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          channelCount: 1,\n          sampleRate: 16000\n        }\n      });\n      streamRef.current = stream;\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      recorderRef.current = new Recorder(audioContext, {\n        numChannels: 1,\n        sampleRate: 16000\n      });\n      await recorderRef.current.init(stream);\n      await recorderRef.current.start();\n      setIsRecording(true);\n      startCountdown();\n    } catch (err) {\n      handleStatus('Microphone access denied. Please allow microphone permissions.', 'error');\n      console.error('Error accessing microphone:', err);\n    }\n  };\n  const startCountdown = () => {\n    setCountdown(10);\n    countdownRef.current = setInterval(() => {\n      setCountdown(prev => {\n        if (prev <= 1) {\n          clearInterval(countdownRef.current);\n          stopRecording();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const stopRecording = async () => {\n    if (recorderRef.current) {\n      try {\n        const [buffer, blob] = await recorderRef.current.stop();\n        const wavBlob = new Blob([blob], {\n          type: 'audio/wav'\n        });\n        setAudioBlob(wavBlob);\n        processRecording(wavBlob);\n\n        // Clean up\n        if (streamRef.current) {\n          streamRef.current.getTracks().forEach(track => track.stop());\n        }\n        setIsRecording(false);\n      } catch (err) {\n        console.error('Error stopping recording:', err);\n        handleStatus('Error stopping recording. Please try again.', 'error');\n      }\n    }\n  };\n  const processRecording = async blob => {\n    try {\n      let response;\n      if (mode === 'register') {\n        response = await registerVoice(blob, userData);\n      } else {\n        response = await loginVoice(blob, userData.username);\n      }\n      if (response.success) {\n        setPassphrase(response.passphrase || '');\n        handleStatus(response.message, 'success');\n      } else {\n        handleStatus(response.message, 'error');\n      }\n    } catch (err) {\n      handleStatus('Failed to process recording. Please try again.', 'error');\n      console.error('Error processing recording:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mode === 'register' ? 'Voice Registration' : 'Voice Authentication'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary ${isRecording ? 'disabled' : ''}`,\n        onClick: startRecording,\n        disabled: isRecording,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), mode === 'register' ? 'Record Passphrase' : 'Verify Identity']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Recording your voice... Please speak now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: countdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-wave\",\n        children: [...Array(8)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave-bar\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), passphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-text\",\n        children: [\"Your \", mode === 'register' ? 'registered' : 'recognized', \" passphrase:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \\\"\", passphrase, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceRecorder, \"rNoJPK4k1S6XQplYrgjgD8AR7Ng=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","registerVoice","loginVoice","Recorder","jsxDEV","_jsxDEV","Fragment","_Fragment","VoiceRecorder","mode","userData","handleStatus","_s","isRecording","setIsRecording","countdown","setCountdown","audioBlob","setAudioBlob","passphrase","setPassphrase","recorderRef","countdownRef","streamRef","current","clearInterval","getTracks","forEach","track","stop","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","channelCount","sampleRate","audioContext","window","AudioContext","webkitAudioContext","numChannels","init","start","startCountdown","err","console","error","setInterval","prev","stopRecording","buffer","blob","wavBlob","Blob","type","processRecording","response","username","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Array","map","_","i","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/voice-auth-system/frontend/src/components/VoiceRecorder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { registerVoice, loginVoice } from '../utils/api';\r\nimport Recorder from 'recorder-js';\r\n\r\nconst VoiceRecorder = ({ mode, userData, handleStatus }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [passphrase, setPassphrase] = useState('');\r\n    const recorderRef = useRef(null);\r\n    const countdownRef = useRef(null);\r\n    const streamRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (countdownRef.current) clearInterval(countdownRef.current);\r\n            if (streamRef.current) {\r\n                streamRef.current.getTracks().forEach(track => track.stop());\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ \r\n                audio: {\r\n                    channelCount: 1,\r\n                    sampleRate: 16000\r\n                } \r\n            });\r\n            streamRef.current = stream;\r\n\r\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            recorderRef.current = new Recorder(audioContext, {\r\n                numChannels: 1,\r\n                sampleRate: 16000\r\n            });\r\n\r\n            await recorderRef.current.init(stream);\r\n            await recorderRef.current.start();\r\n            setIsRecording(true);\r\n            startCountdown();\r\n            \r\n        } catch (err) {\r\n            handleStatus('Microphone access denied. Please allow microphone permissions.', 'error');\r\n            console.error('Error accessing microphone:', err);\r\n        }\r\n    };\r\n\r\n    const startCountdown = () => {\r\n        setCountdown(10);\r\n        countdownRef.current = setInterval(() => {\r\n            setCountdown(prev => {\r\n                if (prev <= 1) {\r\n                    clearInterval(countdownRef.current);\r\n                    stopRecording();\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const stopRecording = async () => {\r\n        if (recorderRef.current) {\r\n            try {\r\n                const [buffer, blob] = await recorderRef.current.stop();\r\n                const wavBlob = new Blob([blob], { type: 'audio/wav' });\r\n                setAudioBlob(wavBlob);\r\n                processRecording(wavBlob);\r\n\r\n                // Clean up\r\n                if (streamRef.current) {\r\n                    streamRef.current.getTracks().forEach(track => track.stop());\r\n                }\r\n                setIsRecording(false);\r\n            } catch (err) {\r\n                console.error('Error stopping recording:', err);\r\n                handleStatus('Error stopping recording. Please try again.', 'error');\r\n            }\r\n        }\r\n    };\r\n\r\n    const processRecording = async (blob) => {\r\n        try {\r\n            let response;\r\n            if (mode === 'register') {\r\n                response = await registerVoice(blob, userData);\r\n            } else {\r\n                response = await loginVoice(blob, userData.username);\r\n            }\r\n            \r\n            if (response.success) {\r\n                setPassphrase(response.passphrase || '');\r\n                handleStatus(response.message, 'success');\r\n            } else {\r\n                handleStatus(response.message, 'error');\r\n            }\r\n        } catch (err) {\r\n            handleStatus('Failed to process recording. Please try again.', 'error');\r\n            console.error('Error processing recording:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel\">\r\n            <div className=\"panel-title\">\r\n                <i className=\"fas fa-microphone\"></i>\r\n                <h2>{mode === 'register' ? 'Voice Registration' : 'Voice Authentication'}</h2>\r\n            </div>\r\n            \r\n            <div className=\"buttons\">\r\n                <button \r\n                    className={`btn btn-primary ${isRecording ? 'disabled' : ''}`}\r\n                    onClick={startRecording}\r\n                    disabled={isRecording}\r\n                >\r\n                    <i className=\"fas fa-microphone\"></i> \r\n                    {mode === 'register' ? 'Record Passphrase' : 'Verify Identity'}\r\n                </button>\r\n            </div>\r\n            \r\n            {isRecording && (\r\n                <>\r\n                    <div className=\"recording-indicator\">\r\n                        <div className=\"pulse\"></div>\r\n                        <div>Recording your voice... Please speak now</div>\r\n                    </div>\r\n                    <div className=\"timer\">{countdown}</div>\r\n                    <div className=\"voice-wave\">\r\n                        {[...Array(8)].map((_, i) => (\r\n                            <div key={i} className=\"wave-bar\"></div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n            \r\n            {passphrase && (\r\n                <div className=\"result-box\">\r\n                    <div className=\"result-text\">\r\n                        Your {mode === 'register' ? 'registered' : 'recognized'} passphrase: \r\n                        <span> \"{passphrase}\"</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VoiceRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}