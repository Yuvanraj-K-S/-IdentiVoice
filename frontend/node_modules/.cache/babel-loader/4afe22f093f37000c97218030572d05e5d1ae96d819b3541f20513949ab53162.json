{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\voice-auth-system\\\\frontend\\\\src\\\\components\\\\VoiceRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { registerVoice, loginVoice } from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoiceRecorder = ({\n  mode,\n  userData,\n  handleStatus\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(10);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [passphrase, setPassphrase] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (countdownRef.current) clearInterval(countdownRef.current);\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const options = {\n        mimeType: 'audio/webm'\n      }; // Use webm for better compatibility\n      mediaRecorderRef.current = new MediaRecorder(stream, options);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = e => {\n        audioChunksRef.current.push(e.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        // Convert to WAV format using proper MIME type\n        const blob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav; codecs=1'\n        });\n        setAudioBlob(blob);\n        processRecording(blob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      startCountdown();\n    } catch (err) {\n      handleStatus('Microphone access denied. Please allow microphone permissions.', 'error');\n      console.error('Error accessing microphone:', err);\n    }\n  };\n  const startCountdown = () => {\n    setCountdown(10);\n    countdownRef.current = setInterval(() => {\n      setCountdown(prev => {\n        if (prev <= 1) {\n          clearInterval(countdownRef.current);\n          stopRecording();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const processRecording = async blob => {\n    try {\n      let response;\n      if (mode === 'register') {\n        response = await registerVoice(blob, userData);\n      } else {\n        response = await loginVoice(blob, userData.username);\n      }\n      if (response.success) {\n        setPassphrase(response.passphrase || '');\n        handleStatus(response.message, 'success');\n      } else {\n        handleStatus(response.message, 'error');\n      }\n    } catch (err) {\n      handleStatus('Failed to process recording. Please try again.', 'error');\n      console.error('Error processing recording:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mode === 'register' ? 'Voice Registration' : 'Voice Authentication'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-primary ${isRecording ? 'disabled' : ''}`,\n        onClick: startRecording,\n        disabled: isRecording,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), mode === 'register' ? 'Record Passphrase' : 'Verify Identity']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Recording your voice... Please speak now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: countdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-wave\",\n        children: [...Array(8)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave-bar\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), passphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-text\",\n        children: [\"Your \", mode === 'register' ? 'registered' : 'recognized', \" passphrase:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \\\"\", passphrase, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceRecorder, \"qG2QUNgwD7BrCv8Y2/BNeRmjsOk=\");\n_c = VoiceRecorder;\nexport default VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["React","useState","useEffect","useRef","registerVoice","loginVoice","jsxDEV","_jsxDEV","Fragment","_Fragment","VoiceRecorder","mode","userData","handleStatus","_s","isRecording","setIsRecording","countdown","setCountdown","audioBlob","setAudioBlob","passphrase","setPassphrase","mediaRecorderRef","audioChunksRef","countdownRef","current","clearInterval","stream","getTracks","forEach","track","stop","startRecording","navigator","mediaDevices","getUserMedia","audio","options","mimeType","MediaRecorder","ondataavailable","e","push","data","onstop","blob","Blob","type","processRecording","start","startCountdown","err","console","error","setInterval","prev","stopRecording","response","username","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Array","map","_","i","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/voice-auth-system/frontend/src/components/VoiceRecorder.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { registerVoice, loginVoice } from '../utils/api';\r\n\r\nconst VoiceRecorder = ({ mode, userData, handleStatus }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [passphrase, setPassphrase] = useState('');\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunksRef = useRef([]);\r\n    const countdownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (countdownRef.current) clearInterval(countdownRef.current);\r\n            if (mediaRecorderRef.current) {\r\n                mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            const options = { mimeType: 'audio/webm' };  // Use webm for better compatibility\r\n            mediaRecorderRef.current = new MediaRecorder(stream, options);\r\n            audioChunksRef.current = [];\r\n            \r\n            mediaRecorderRef.current.ondataavailable = (e) => {\r\n                audioChunksRef.current.push(e.data);\r\n            };\r\n            \r\n            mediaRecorderRef.current.onstop = async () => {\r\n                // Convert to WAV format using proper MIME type\r\n                const blob = new Blob(audioChunksRef.current, { type: 'audio/wav; codecs=1' });\r\n                setAudioBlob(blob);\r\n                processRecording(blob);\r\n            };\r\n            \r\n            mediaRecorderRef.current.start();\r\n            setIsRecording(true);\r\n            startCountdown();\r\n            \r\n        } catch (err) {\r\n            handleStatus('Microphone access denied. Please allow microphone permissions.', 'error');\r\n            console.error('Error accessing microphone:', err);\r\n        }\r\n    };\r\n\r\n    const startCountdown = () => {\r\n        setCountdown(10);\r\n        countdownRef.current = setInterval(() => {\r\n            setCountdown(prev => {\r\n                if (prev <= 1) {\r\n                    clearInterval(countdownRef.current);\r\n                    stopRecording();\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n        }\r\n    };\r\n\r\n    const processRecording = async (blob) => {\r\n        try {\r\n            let response;\r\n            if (mode === 'register') {\r\n                response = await registerVoice(blob, userData);\r\n            } else {\r\n                response = await loginVoice(blob, userData.username);\r\n            }\r\n            \r\n            if (response.success) {\r\n                setPassphrase(response.passphrase || '');\r\n                handleStatus(response.message, 'success');\r\n            } else {\r\n                handleStatus(response.message, 'error');\r\n            }\r\n        } catch (err) {\r\n            handleStatus('Failed to process recording. Please try again.', 'error');\r\n            console.error('Error processing recording:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"panel\">\r\n            <div className=\"panel-title\">\r\n                <i className=\"fas fa-microphone\"></i>\r\n                <h2>{mode === 'register' ? 'Voice Registration' : 'Voice Authentication'}</h2>\r\n            </div>\r\n            \r\n            <div className=\"buttons\">\r\n                <button \r\n                    className={`btn btn-primary ${isRecording ? 'disabled' : ''}`}\r\n                    onClick={startRecording}\r\n                    disabled={isRecording}\r\n                >\r\n                    <i className=\"fas fa-microphone\"></i> \r\n                    {mode === 'register' ? 'Record Passphrase' : 'Verify Identity'}\r\n                </button>\r\n            </div>\r\n            \r\n            {isRecording && (\r\n                <>\r\n                    <div className=\"recording-indicator\">\r\n                        <div className=\"pulse\"></div>\r\n                        <div>Recording your voice... Please speak now</div>\r\n                    </div>\r\n                    <div className=\"timer\">{countdown}</div>\r\n                    <div className=\"voice-wave\">\r\n                        {[...Array(8)].map((_, i) => (\r\n                            <div key={i} className=\"wave-bar\"></div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n            \r\n            {passphrase && (\r\n                <div className=\"result-box\">\r\n                    <div className=\"result-text\">\r\n                        Your {mode === 'register' ? 'registered' : 'recognized'} passphrase: \r\n                        <span> \"{passphrase}\"</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VoiceRecorder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,aAAa,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMsB,gBAAgB,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMqB,cAAc,GAAGrB,MAAM,CAAC,EAAE,CAAC;EACjC,MAAMsB,YAAY,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT,IAAIuB,YAAY,CAACC,OAAO,EAAEC,aAAa,CAACF,YAAY,CAACC,OAAO,CAAC;MAC7D,IAAIH,gBAAgB,CAACG,OAAO,EAAE;QAC1BH,gBAAgB,CAACG,OAAO,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MAC9E;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAML,MAAM,GAAG,MAAMM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE,MAAMC,OAAO,GAAG;QAAEC,QAAQ,EAAE;MAAa,CAAC,CAAC,CAAE;MAC7ChB,gBAAgB,CAACG,OAAO,GAAG,IAAIc,aAAa,CAACZ,MAAM,EAAEU,OAAO,CAAC;MAC7Dd,cAAc,CAACE,OAAO,GAAG,EAAE;MAE3BH,gBAAgB,CAACG,OAAO,CAACe,eAAe,GAAIC,CAAC,IAAK;QAC9ClB,cAAc,CAACE,OAAO,CAACiB,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;MACvC,CAAC;MAEDrB,gBAAgB,CAACG,OAAO,CAACmB,MAAM,GAAG,YAAY;QAC1C;QACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACvB,cAAc,CAACE,OAAO,EAAE;UAAEsB,IAAI,EAAE;QAAsB,CAAC,CAAC;QAC9E5B,YAAY,CAAC0B,IAAI,CAAC;QAClBG,gBAAgB,CAACH,IAAI,CAAC;MAC1B,CAAC;MAEDvB,gBAAgB,CAACG,OAAO,CAACwB,KAAK,CAAC,CAAC;MAChClC,cAAc,CAAC,IAAI,CAAC;MACpBmC,cAAc,CAAC,CAAC;IAEpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVvC,YAAY,CAAC,gEAAgE,EAAE,OAAO,CAAC;MACvFwC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;IACrD;EACJ,CAAC;EAED,MAAMD,cAAc,GAAGA,CAAA,KAAM;IACzBjC,YAAY,CAAC,EAAE,CAAC;IAChBO,YAAY,CAACC,OAAO,GAAG6B,WAAW,CAAC,MAAM;MACrCrC,YAAY,CAACsC,IAAI,IAAI;QACjB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACX7B,aAAa,CAACF,YAAY,CAACC,OAAO,CAAC;UACnC+B,aAAa,CAAC,CAAC;UACf,OAAO,CAAC;QACZ;QACA,OAAOD,IAAI,GAAG,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC5B,IAAIlC,gBAAgB,CAACG,OAAO,EAAE;MAC1BH,gBAAgB,CAACG,OAAO,CAACM,IAAI,CAAC,CAAC;MAC/BhB,cAAc,CAAC,KAAK,CAAC;MACrBO,gBAAgB,CAACG,OAAO,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IAC1E;EACJ,CAAC;EAED,MAAMiB,gBAAgB,GAAG,MAAOH,IAAI,IAAK;IACrC,IAAI;MACA,IAAIY,QAAQ;MACZ,IAAI/C,IAAI,KAAK,UAAU,EAAE;QACrB+C,QAAQ,GAAG,MAAMtD,aAAa,CAAC0C,IAAI,EAAElC,QAAQ,CAAC;MAClD,CAAC,MAAM;QACH8C,QAAQ,GAAG,MAAMrD,UAAU,CAACyC,IAAI,EAAElC,QAAQ,CAAC+C,QAAQ,CAAC;MACxD;MAEA,IAAID,QAAQ,CAACE,OAAO,EAAE;QAClBtC,aAAa,CAACoC,QAAQ,CAACrC,UAAU,IAAI,EAAE,CAAC;QACxCR,YAAY,CAAC6C,QAAQ,CAACG,OAAO,EAAE,SAAS,CAAC;MAC7C,CAAC,MAAM;QACHhD,YAAY,CAAC6C,QAAQ,CAACG,OAAO,EAAE,OAAO,CAAC;MAC3C;IACJ,CAAC,CAAC,OAAOT,GAAG,EAAE;MACVvC,YAAY,CAAC,gDAAgD,EAAE,OAAO,CAAC;MACvEwC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;IACrD;EACJ,CAAC;EAED,oBACI7C,OAAA;IAAKuD,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBxD,OAAA;MAAKuD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBxD,OAAA;QAAGuD,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC5D,OAAA;QAAAwD,QAAA,EAAKpD,IAAI,KAAK,UAAU,GAAG,oBAAoB,GAAG;MAAsB;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBxD,OAAA;QACIuD,SAAS,EAAE,mBAAmB/C,WAAW,GAAG,UAAU,GAAG,EAAE,EAAG;QAC9DqD,OAAO,EAAEnC,cAAe;QACxBoC,QAAQ,EAAEtD,WAAY;QAAAgD,QAAA,gBAEtBxD,OAAA;UAAGuD,SAAS,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpCxD,IAAI,KAAK,UAAU,GAAG,mBAAmB,GAAG,iBAAiB;MAAA;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELpD,WAAW,iBACRR,OAAA,CAAAE,SAAA;MAAAsD,QAAA,gBACIxD,OAAA;QAAKuD,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChCxD,OAAA;UAAKuD,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7B5D,OAAA;UAAAwD,QAAA,EAAK;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACN5D,OAAA;QAAKuD,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE9C;MAAS;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxC5D,OAAA;QAAKuD,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtB,CAAC,GAAGO,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACpBlE,OAAA;UAAauD,SAAS,EAAC;QAAU,GAAvBW,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4B,CAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR,CACL,EAEA9C,UAAU,iBACPd,OAAA;MAAKuD,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBxD,OAAA;QAAKuD,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,OACpB,EAACpD,IAAI,KAAK,UAAU,GAAG,YAAY,GAAG,YAAY,EAAC,cACxD,eAAAJ,OAAA;UAAAwD,QAAA,GAAM,KAAE,EAAC1C,UAAU,EAAC,IAAC;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrD,EAAA,CApIIJ,aAAa;AAAAgE,EAAA,GAAbhE,aAAa;AAsInB,eAAeA,aAAa;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}